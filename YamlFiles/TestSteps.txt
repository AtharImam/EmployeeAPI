Steps to Test:
kubectl get nodes
ls
kubectl apply -f empldb-secret-config.yaml && kubectl get secrets,configmap
kubectl apply -f empldb-pv-pvc.yaml && kubectl get pv,pvc
kubectl apply -f empldb-ssets-svc.yaml && kubectl get svc
kubectl get pods
kubectl exec empldb-ssets-0 -- sh -c 'MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysql -u root --table -e "SELECT * FROM Employees;" EmployeeDb'
kubectl apply -f empldb-seed-job.yaml && kubectl get jobs
kubectl exec empldb-ssets-0 -- sh -c 'MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysql -u root --table -e "SELECT * FROM Employees;" EmployeeDb'
kubectl apply -f emplapi-depl-svc.yaml && kubectl get svc
kubectl get pods
kubectl apply -f emplapi-ing.yaml && kubectl get ingress
kubectl get all

Delete API Pod
kubectl get pods -l app=employeeapi -w
kubectl delete pod emplapi-depl-5ff4cf5f75-7hjk2
kubectl get pods -l app=employeeapi

Rolling Update
kubectl get pods -l app=employeeapi -w
kubectl set image deployment/emplapi-depl employeeapi=atharimam/employeeapi:4.3.2
kubectl rollout undo deployment emplapi-depl
kubectl get pods -l app=employeeapi

Test Connection API with DB
Show data in browser and postman
kubectl exec empldb-ssets-0 -- sh -c 'MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysql -u root --table -e "SELECT * FROM Employees;" EmployeeDb'

Test API is real updating DB
POST one data using postman
Show data in browser and postman
kubectl exec empldb-ssets-0 -- sh -c 'MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysql -u root --table -e "SELECT * FROM Employees;" EmployeeDb'

Test DB Pod Deletion and Pod is regenerated
Test Data Persistence after db pod is deleted

kubectl get pods -l app=mysql -w
kubectl delete pod <pod-name> && kubectl get pods -l app=mysql --watch
kubectl get pods -l app=MySQL
kubectl exec empldb-ssets-0 -- sh -c 'MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysql -u root --table -e "SELECT * FROM Employees;" EmployeeDb'
show in browser as well

Test Data Persistence after db StatefulSets is deleted
kubectl get pods -l app=mysql -w
kubectl delete statefulsets empldb-ssets
kubectl get pods -l app=mysql
kubectl apply -f empldb-ssets-svc.yaml
kubectl get pods -l app=mysql
kubectl exec empldb-ssets-0 -- sh -c 'MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysql -u root --table -e "SELECT * FROM Employees;" EmployeeDb'
show in browser as well

Test Auto Scale 
Test Connection pool Count
kubectl apply -f emplapi-hpa.yaml
kubectl get hpa -w
kubectl get pods -l app=employeeapi -w
Note: Make sure publicip for ingress is enabled
docker run --rm williamyeh/hey -n 4000 -c 200 http://34.8.34.21/api/employee
kubectl exec empldb-ssets-0 -- sh -c 'MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysql -u root --table -e "SELECT ATTR_VALUE, COUNT(1) Connections FROM performance_schema.session_connect_attrs WHERE ATTR_NAME = '\''program_name'\'' AND ATTR_VALUE!='\''mysql'\'' GROUP BY ATTR_VALUE;"'


















